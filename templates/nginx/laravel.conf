server {
    listen 80;
    listen [::]:80;
    server_name [DOMAIN_NAME] www.[DOMAIN_NAME];

    # redirects both www and non-www to https
    return 301 https://[DOMAIN_NAME]$request_uri;
}

server {
    listen 443 ssl http2;
    server_name www.[DOMAIN_NAME];

        #include snippets/ssl-params.conf;
    #include snippets/lets-encrypt-certs.conf;

    # redirects www to non-www. wasn't work for me without this server block
    return 301 https://[DOMAIN_NAME]$request_uri;
}

server {

    access_log /var/log/nginx/[DOMAIN_NAME][BRANCH_NAME]-access.log;
    error_log /var/log/nginx/[DOMAIN_NAME][BRANCH_NAME]-error.log;
    ## SSL settings

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
        #include snippets/ssl-params.conf;
    #include snippets/lets-encrypt-certs.conf;

    server_name [DOMAIN_NAME];

    root [PROJECT_DIR]/[BRANCH_NAME]/public;

    index index.php;

    client_max_body_size 50M;

    # Global restrictions configuration file.
    # Designed to be included in any server {} block.
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~ /\. {
        deny all;
    }

    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass 127.0.01:9000;
#        fastcgi_pass unix:/run/php/php8.0-fpm.sock;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires max;
        log_not_found off;
    }
}
